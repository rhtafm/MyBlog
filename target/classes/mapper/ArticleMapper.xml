<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wiki.jixing.myblog.mapper.ArticleMapper">
    <resultMap id="articleMap" type="wiki.jixing.myblog.entity.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="summary" property="summary"/>
        <result column="cover_img" property="coverImg"/>
        <result column="status" property="status"/>
        <result column="views" property="views"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <association property="category" javaType="wiki.jixing.myblog.entity.Category"
                     select="wiki.jixing.myblog.mapper.CategoryMapper.selectById" column="category_id"/>
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into article(title, content, summary, cover_img, category_id, status, views, create_time, update_time)
        values (#{title},#{content},#{summary},#{coverImg},#{category.id},#{status},#{views},#{createTime},#{updateTime})
    </insert>
    <insert id="batchInsertArticleAndTags">
        <if test="articleId != null and tagIds != null">
            insert into article_tag(article_id, tag_id) values
            <foreach collection="tagIds" item="tagId" separator=",">
                (#{articleId},#{tagId})
            </foreach>
        </if>
    </insert>
    <update id="update">
        update article
        <set>
            <if test="title != null">title=#{title},</if>
            <if test="content != null">content=#{content},</if>
            <if test="summary != null">summary=#{summary},</if>
            <if test="coverImg != null">cover_img=#{coverImg},</if>
            <if test="category != null and category.id != null">category_id=#{category.id},</if>
            <if test="status != null">status=#{status},</if>
            <if test="views != null">views=#{views},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteById">
        delete from article where id = #{id}
    </delete>
    <delete id="deleteArticleAndTagsByArticleId">
        delete from article_tag where article_id = #{id}
    </delete>
    <delete id="deleteArticleAndTagsByTagId">
        delete from article_tag where tag_id = #{id}
    </delete>
    <select id="count" resultType="java.lang.Integer">
        select count(*) from article
    </select>
    <select id="listAll" resultMap="articleMap">
        select * from article order by id desc
    </select>
    <select id="selectById" resultMap="articleMap">
        select * from article where id = #{id}
    </select>
    <select id="selectListOnCondition" resultMap="articleMap">
        select * from article where title like #{title}
        <if test="categoryId != null">
            and category_id = #{categoryId}
        </if>
        order by id desc
    </select>
    <select id="countByStatus" resultType="java.lang.Integer">
        select count(*) from article where status = #{status}
    </select>
    <select id="countByCategoryId" resultType="java.lang.Integer">
        select count(*) from article where category_id = #{id} and status = 1
    </select>
    <select id="listByStatus" resultMap="articleMap">
        select * from article where status = #{status} order by id desc
    </select>
    <select id="countByTagId" resultType="java.lang.Integer">
        select count(*) from article_tag where tag_id = #{id}
    </select>
    <select id="listByIds" resultMap="articleMap">
        select * from article
        <where>
            <foreach collection="ids" item="id">
                or id = #{id}
            </foreach>
        </where>
        order by id desc
    </select>
    <select id="listByCategoryId" resultMap="articleMap">
        select * from article where category_id = #{id} order by id desc
    </select>
    <select id="listArticleIdByTagId" resultType="java.lang.Integer">
        select article_id from article_tag where tag_id = #{id}
    </select>
    <select id="selectListByText" resultMap="articleMap">
        select * from article where (title like #{text} or content like #{text}) and status = 1 order by id desc
    </select>
    <select id="listByCategoryIdAndStatus" resultMap="articleMap">
        select * from article where category_id = #{id} and status = #{status} order by id desc
    </select>
</mapper>